#!/usr/bin/env ruby

event, arg1, arg2, file = ARGV


def to_file(_status)
  status = _status.split('')[0..16].join('')+"..."
  `echo '#{status}' >> ~/.mcabber_unread`
end

def notify(body,file=nil)
  begin
    file = File.read(file)
  rescue
    file = nil
  end
  file = body if file.nil?
  `growlnotify -n "mcabber" -t "mcabber" -t "#{body}" -m "#{file}"`
end

def char_to_status ch
  case ch
    when '+' then 'is typing'
    when '.' then 'stopped typing'
    when '_' then 'offline'
    when 'O' then 'online'
    when 'A' then 'away'
    when 'D' then 'do not disturb'
    when 'N' then 'not available'
    when 'F' then 'free for chat'
    when '?' then 'unknown'
    when 'X' then 'not connected (muc)'
    when 'C' then 'connected (muc)'
    else
      ch
    end
end


case event
when 'MSG'
  case arg1
  when /IN|OUT/
    notify "From #{arg2}", file
    to_file "IN/OUT #{arg2}"
  when 'MUC'
    notify "MUC #{arg2}",file
    to_file "MUC #{arg2}"
  end
when 'STATUS'
  notify "#{arg2} -> #{char_to_status arg1}"
when 'UNREAD'
  notify  "Unread #{arg1}"
  to_file "Unread #{arg1}"
end
